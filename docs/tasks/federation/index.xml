<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>😝 - 联邦 - 在多个集群上运行一个应用 on Hugo 主题的 Learn 文档</title>
    <link>https://lijun.in/tasks/federation/</link>
    <description>Recent content in 😝 - 联邦 - 在多个集群上运行一个应用 on Hugo 主题的 Learn 文档</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    
	<atom:link href="https://lijun.in/tasks/federation/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>将 CoreDNS 设置为联邦集群的 DNS 提供者</title>
      <link>https://lijun.in/tasks/federation/set-up-coredns-provider-federation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lijun.in/tasks/federation/set-up-coredns-provider-federation/</guid>
      <description>. deprecationfilewarning &amp;gt;}} . include &amp;ldquo;federation-deprecation-warning-note.md&amp;rdquo; &amp;gt;}} . /deprecationfilewarning &amp;gt;}}
此页面显示如何配置和部署 CoreDNS，将其用作联邦集群的 DNS 提供者
. heading &amp;ldquo;objectives&amp;rdquo; %}}  配置和部署 CoreDNS 服务器 使用 CoreDNS 作为 dns 提供者设置联邦 在 nameserver 查找链中设置 CoreDNS 服务器  . heading &amp;ldquo;prerequisites&amp;rdquo; %}}  你需要有一个正在运行的 Kubernetes 集群（作为主机集群引用）。请参阅入门指南，了解平台的安装说明。 必须在联邦的集群成员中支持 LoadBalancer 服务，用来支持跨联邦集群的 CoreDNS 服务发现。  部署 CoreDNS 和 etcd 图表 CoreDNS 可以部署在各种配置中。下面解释的是一个参考，可以根据平台和联邦集群的需要进行调整。
为了部署 CoreDNS，我们将利用图表。 CoreDNS 将部署 etcd 作为后端，并且应该预先安装。etcd 也可以使用图表进行部署。下面显示了部署 etcd 的说明。
helm install --namespace my-namespace --name etcd-operator stable/etcd-operator helm upgrade --namespace my-namespace --set cluster.</description>
    </item>
    
    <item>
      <title>使用联合服务来实现跨集群的服务发现</title>
      <link>https://lijun.in/tasks/federation/federation-service-discovery/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lijun.in/tasks/federation/federation-service-discovery/</guid>
      <description>. deprecationfilewarning &amp;gt;}} . include &amp;ldquo;federation-deprecation-warning-note.md&amp;rdquo; &amp;gt;}} . /deprecationfilewarning &amp;gt;}}
本指南说明了如何使用 Kubernetes 联合服务跨多个 Kubernetes 集群部署通用服务。这样可以轻松实现 Kubernetes 应用程序的跨集群服务发现和可用区容错。
联合服务的创建与传统服务几乎相同 Kubernetes Services 即通过 API 调用来指定所需的服务属性。对于联合服务，此 API 调用定向到联合身份验证 API 接入点，而不是 Kubernetes 集群 API 接入点。联合服务的 API 与传统 Kubernetes 服务的 API 是 100% 兼容的。
创建后，联合服务会自动:
 在基础集群联合的每个集群中创建匹配的 Kubernetes 服务, 监视那些服务 &amp;ldquo;分片&amp;rdquo;(及其驻留的集群)的运行状况,以及 在公共 DNS 提供商(例如 Google Cloud DNS 或 AWS Route 53)中管理一组 DNS 记录,即使在集群可用区域中断的情况下，也能确保您联合服务的客户端始终可以无缝地定位合适的健康服务接入点。  如果存在健康的分片，联合 Kubernetes 集群(即 Pods )中的客户端将自动在其中找到联合服务的本地分片集群或者集群中最接近的健康分片;如果不存在，则使用最接近的其他集群的健康分片。
. toc &amp;gt;}}
. heading &amp;ldquo;prerequisites&amp;rdquo; %}} .</description>
    </item>
    
    <item>
      <title>在联邦中设置放置策略</title>
      <link>https://lijun.in/tasks/federation/set-up-placement-policies-federation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lijun.in/tasks/federation/set-up-placement-policies-federation/</guid>
      <description>. deprecationfilewarning &amp;gt;}} . include &amp;ldquo;federation-deprecation-warning-note.md&amp;rdquo; &amp;gt;}} . /deprecationfilewarning &amp;gt;}}
此页面显示如何使用外部策略引擎对联邦资源强制执行基于策略的放置决策。
. heading &amp;ldquo;prerequisites&amp;rdquo; %}} 您需要一个正在运行的 Kubernetes 集群(它被引用为主机集群)。有关您的平台的安装说明，请参阅入门指南。
Deploying 联邦并配置外部策略引擎 可以使用 kubefed init 部署联邦控制平面。
Deploying 联邦控制平面之后，必须在联邦 API 服务器中配置一个准入控制器，该控制器强制执行从外部策略引擎接收到的放置决策。
kubectl create -f scheduling-policy-admission.yaml  下图是准入控制器的 ConfigMap 示例：
. codenew file=&amp;quot;federation/scheduling-policy-admission.yaml&amp;rdquo; &amp;gt;}}
ConfigMap 包含三个文件：
 config.yml 指定 调度策略 准入控制器配置文件的位置。 scheduling-policy-config.yml 指定与外部策略引擎联系所需的 kubeconfig 文件的位置。 该文件还可以包含一个 retryBackoff 值，该值以毫秒为单位控制初始重试 backoff 延迟。 opa-kubeconfig 是一个标准的 kubeconfig，包含联系外部策略引擎所需的 URL 和凭证。  编辑联邦 API 服务器部署以启用 SchedulingPolicy 准入控制器。
kubectl -n federation-system edit deployment federation-apiserver  更新 Federation API 服务器命令行参数以启用准入控制器， 并将 ConfigMap 挂载到容器中。如果存在现有的 -enable-admissionplugins 参数，则追加 SchedulingPolicy 而不是添加另一行。</description>
    </item>
    
  </channel>
</rss>