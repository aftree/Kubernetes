<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>安装网络规则驱动 on Hugo 主题的 Learn 文档</title>
    <link>https://lijun.in/tasks/administer-cluster/network-policy-provider/</link>
    <description>Recent content in 安装网络规则驱动 on Hugo 主题的 Learn 文档</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    
	<atom:link href="https://lijun.in/tasks/administer-cluster/network-policy-provider/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>使用 Calico 作为 NetworkPolicy</title>
      <link>https://lijun.in/tasks/administer-cluster/network-policy-provider/calico-network-policy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lijun.in/tasks/administer-cluster/network-policy-provider/calico-network-policy/</guid>
      <description>本页展示了两种在 Kubernetes 上快速创建 Calico 集群的方法。
. heading &amp;ldquo;prerequisites&amp;rdquo; %}} 决定您想部署一个云 还是 本地 集群。
在 Google Kubernetes Engine (GKE) 上创建一个 Calico 集群 先决条件: gcloud
  启动一个带有 Calico 的 GKE 集群，只需加上flag --enable-network-policy。
语法
gcloud container clusters create [CLUSTER_NAME] --enable-network-policy 示例
gcloud container clusters create my-calico-cluster --enable-network-policy   使用如下命令验证部署是否正确。
kubectl get pods --namespace=kube-system Calico 的 pods 名以 calico 打头，检查确认每个 pods 状态为 Running。
  使用 kubeadm 创建一个本地 Calico 集群 在15分钟内使用 kubeadm 得到一个本地单主机 Calico 集群，请参考 Calico 快速入门。</description>
    </item>
    
    <item>
      <title>使用 Cilium 作为 NetworkPolicy</title>
      <link>https://lijun.in/tasks/administer-cluster/network-policy-provider/cilium-network-policy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lijun.in/tasks/administer-cluster/network-policy-provider/cilium-network-policy/</guid>
      <description>本页展示了如何使用 Cilium 作为 NetworkPolicy。
关于 Cilium 的背景知识，请阅读 Cilium 介绍。
. heading &amp;ldquo;prerequisites&amp;rdquo; %}} . include &amp;ldquo;task-tutorial-prereqs.md&amp;rdquo; &amp;gt;}} . version-check &amp;gt;}}
在 Minikube 上部署 Cilium 用于基本测试 为了轻松熟悉 Cilium 您可以根据Cilium Kubernetes 入门指南在 minikube 中执行一个 cilium 的基本的 DaemonSet 安装。
在 minikube 中的安装配置使用一个简单的“一体化” YAML 文件，包括了 Cilium 的 DaemonSet 配置，连接 minikube 的 etcd 实例，以及适当的 RBAC 设置。
$ kubectl create -f https://raw.githubusercontent.com/cilium/cilium/master/examples/kubernetes/cilium.yaml configmap &amp;#34;cilium-config&amp;#34; created secret &amp;#34;cilium-etcd-secrets&amp;#34; created serviceaccount &amp;#34;cilium&amp;#34; created clusterrolebinding &amp;#34;cilium&amp;#34; created daemonset &amp;#34;cilium&amp;#34; created clusterrole &amp;#34;cilium&amp;#34; created 入门指南其余的部分用一个示例应用说明了如何强制执行L3/L4（即 IP 地址+端口）的安全策略以及L7 （如 HTTP）的安全策略。</description>
    </item>
    
    <item>
      <title>使用 Kube-router 作为 NetworkPolicy</title>
      <link>https://lijun.in/tasks/administer-cluster/network-policy-provider/kube-router-network-policy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lijun.in/tasks/administer-cluster/network-policy-provider/kube-router-network-policy/</guid>
      <description>本页展示了如何使用 Kube-router 作为 NetworkPolicy。
. heading &amp;ldquo;prerequisites&amp;rdquo; %}} 您需要拥有一个正在运行的 Kubernetes 集群。如果您还没有集群，可以使用任意的集群安装器如 Kops，Bootkube，Kubeadm 等创建一个。
安装 Kube-router 插件 Kube-router 插件自带一个Network Policy 控制器，监视来自于Kubernetes API server 的 NetworkPolicy 和 pods 的变化，根据策略指示配置 iptables 规则和 ipsets 来允许或阻止流量。请根据 尝试通过集群安装器使用 Kube-router 指南安装 Kube-router 插件。
. heading &amp;ldquo;whatsnext&amp;rdquo; %}} 在您安装 Kube-router 插件后，可以根据 声明 Network Policy 去尝试使用 Kubernetes NetworkPolicy。</description>
    </item>
    
    <item>
      <title>使用 Romana 作为 NetworkPolicy</title>
      <link>https://lijun.in/tasks/administer-cluster/network-policy-provider/romana-network-policy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lijun.in/tasks/administer-cluster/network-policy-provider/romana-network-policy/</guid>
      <description>本页展示如何使用 Romana 作为 NetworkPolicy。
. heading &amp;ldquo;prerequisites&amp;rdquo; %}} 完成kubeadm 入门指南中的1、2、3步。
使用 kubeadm 安装 Romana 按照容器化安装指南获取 kubeadm。
运用网络策略 使用以下的一种方式去运用网络策略：
 Romana 网络策略  Romana 网络策略例子   NetworkPolicy API  . heading &amp;ldquo;whatsnext&amp;rdquo; %}} Romana 安装完成后，您可以按照声明 Network Policy去尝试使用 Kubernetes NetworkPolicy。</description>
    </item>
    
    <item>
      <title>使用 Weave Net 作为 NetworkPolicy</title>
      <link>https://lijun.in/tasks/administer-cluster/network-policy-provider/weave-network-policy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lijun.in/tasks/administer-cluster/network-policy-provider/weave-network-policy/</guid>
      <description>本页展示了如何使用使用 Weave Net 作为 NetworkPolicy。
. heading &amp;ldquo;prerequisites&amp;rdquo; %}} 您需要拥有一个 Kubernetes 集群。按照kubeadm 入门指南来引导一个。
安装 Weave Net 插件 按照通过插件集成Kubernetes指南。
Kubernetes 的 Weave Net 插件带有网络策略控制器，可自动监控 Kubernetes 所有名称空间中的任何 NetworkPolicy 注释。 配置iptables规则以允许或阻止策略指示的流量。
测试安装 验证 weave 是否有效。
输入以下命令：
kubectl get po -n kube-system -o wide 输出类似这样：
NAME READY STATUS RESTARTS AGE IP NODE weave-net-1t1qg 2/2 Running 0 9d 192.168.2.10 worknode3 weave-net-231d7 2/2 Running 1 7d 10.2.0.17 worknodegpu weave-net-7nmwt 2/2 Running 3 9d 192.168.2.131 masternode weave-net-pmw8w 2/2 Running 0 9d 192.</description>
    </item>
    
  </channel>
</rss>