<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>😝 - TLS on Hugo 主题的 Learn 文档</title>
    <link>https://lijun.in/tasks/tls/</link>
    <description>Recent content in 😝 - TLS on Hugo 主题的 Learn 文档</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    
	<atom:link href="https://lijun.in/tasks/tls/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>管理集群中的 TLS 认证</title>
      <link>https://lijun.in/tasks/tls/managing-tls-in-a-cluster/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lijun.in/tasks/tls/managing-tls-in-a-cluster/</guid>
      <description>Kubernetes提供一个 certificates.k8s.io API，可让您配置 由您控制的证书颁发机构（CA）签名的TLS证书。 您的工作负载可以使用这些CA和证书来建立信任。
certificates.k8s.io API使用的协议类似于ACME 草稿。
. note &amp;gt;}}
使用certificates.k8s.io API创建的证书由 指定 CA 颁发。 将集群配置为使用集群根目录 CA 可以达到这个目的，但是您永远不要依赖它。不要以为 这些证书将针对群根目录 CA 进行验证。 . /note &amp;gt;}}
. heading &amp;ldquo;prerequisites&amp;rdquo; %}} . include &amp;ldquo;task-tutorial-prereqs.md&amp;rdquo; &amp;gt;}} . version-check &amp;gt;}}
集群中的 TLS 信任 让 Pod 中运行的应用程序信任集群根 CA 通常需要一些额外的应用程序配置。您将需要将 CA 证书包添加到 TLS 客户端或服务器信任的 CA 证书列表中。例如，您可以使用 golang TLS 配置通过解析证书链并将解析的证书添加到 tls.Config 结构中的 RootCAs 字段中。
CA 证书捆绑包将使用默认服务账户自动加载到 pod 中，路径为 /var/run/secrets/kubernetes.io/serviceaccount/ca.crt。如果您没有使用默认服务账户，请请求集群管理员构建包含您有权访问使用的证书包的 configmap。
请求认证 以下部分演示如何为通过 DNS 访问的 Kubernetes 服务创建 TLS 证书。</description>
    </item>
    
    <item>
      <title>证书轮换</title>
      <link>https://lijun.in/tasks/tls/certificate-rotation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lijun.in/tasks/tls/certificate-rotation/</guid>
      <description>本文展示如何在 kubelet 中启用并配置证书轮换。
. heading &amp;ldquo;prerequisites&amp;rdquo; %}}   要求 Kubernetes 1.8.0 或更高的版本
  Kubelet 证书轮换在 1.8.0 版本中处于 beta 阶段, 这意味着该特性可能在没有通知的情况下发生变化。
  概述 Kubelet 使用证书进行 Kubernetes API 的认证。 默认情况下，这些证书的签发期限为一年，所以不需要太频繁地进行更新。
Kubernetes 1.8 版本中包含 beta 特性 kubelet 证书轮换， 在当前证书即将过期时， 将自动生成新的秘钥，并从 Kubernetes API 申请新的证书。 一旦新的证书可用，它将被用于与 Kubernetes API 间的连接认证。
启用客户端证书轮换 kubelet 进程接收 --rotate-certificates 参数，该参数决定 kubelet 在当前使用的证书即将到期时， 是否会自动申请新的证书。 由于证书轮换是 beta 特性，必须通过参数 --feature-gates=RotateKubeletClientCertificate=true 进行启用。
kube-controller-manager 进程接收 --experimental-cluster-signing-duration 参数，该参数控制证书签发的有效期限。
理解证书轮换配置 当 kubelet 启动时，如被配置为自举（使用--bootstrap-kubeconfig 参数），kubelet 会使用其初始证书连接到 Kubernetes API ，并发送证书签名的请求。 可以通过以下方式查看证书签名请求的状态：</description>
    </item>
    
  </channel>
</rss>