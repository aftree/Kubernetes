<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>创建集群 on Hugo 主题的 Learn 文档</title>
    <link>https://lijun.in/tutorials/kubernetes-basics/create-cluster/</link>
    <description>Recent content in 创建集群 on Hugo 主题的 Learn 文档</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    
	<atom:link href="https://lijun.in/tutorials/kubernetes-basics/create-cluster/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>使用 Minikube 创建集群</title>
      <link>https://lijun.in/tutorials/kubernetes-basics/create-cluster/cluster-intro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lijun.in/tutorials/kubernetes-basics/create-cluster/cluster-intro/</guid>
      <description>目标  了解 Kubernetes 集群。 了解 Minikube 。 使用在线终端开启一个 Kubernetes 集群。    Kubernetes 集群   Kubernetes 协调一个高可用计算机集群，每个计算机作为独立单元互相连接工作。 Kubernetes 中的抽象允许您将容器化的应用部署到群集，而无需将它们绑定到某个特定的独立计算机。为了使用这种新的部署模型，应用需要以将应用与单个主机分离的方式打包：它们需要被容器化。与过去的那种应用直接以包的方式深度与主机集成的部署模型相比，容器化应用更灵活、更可用。 Kubernetes 以更高效的方式跨群集自动分发和调度应用容器。 Kubernetes 是一个开源平台，并且可应用于生产环境。 一个 Kubernetes 集群包含两种类型的资源:   Master 调度整个集群  Nodes 负责运行应用   总结:   Kubernetes 集群  Minikube     Kubernetes 是一个生产级别的开源平台，可协调在计算机集群内和跨计算机集群的应用容器的部署（调度）和执行. 
   集群图      Master 负责管理整个集群。 Master 协调集群中的所有活动，例如调度应用、维护应用的所需状态、应用扩容以及推出新的更新。
 Node 是一个虚拟机或者物理机，它在 Kubernetes 集群中充当工作机器的角色 每个Node都有 Kubelet , 它管理 Node 而且是 Node 与 Master 通信的代理。 Node 还应该具有用于​​处理容器操作的工具，例如 Docker 或 rkt 。处理生产级流量的 Kubernetes 集群至少应具有三个 Node 。</description>
    </item>
    
    <item>
      <title>交互式教程 - 创建集群</title>
      <link>https://lijun.in/tutorials/kubernetes-basics/create-cluster/cluster-interactive/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lijun.in/tutorials/kubernetes-basics/create-cluster/cluster-interactive/</guid>
      <description>   要与终端交互，请使用桌面/平板    Continue to Module 2› -- 继续阅读第二单元›       </description>
    </item>
    
  </channel>
</rss>