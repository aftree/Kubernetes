<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>😎 - 集群 on Hugo 主题的 Learn 文档</title>
    <link>https://lijun.in/tutorials/clusters/</link>
    <description>Recent content in 😎 - 集群 on Hugo 主题的 Learn 文档</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    
	<atom:link href="https://lijun.in/tutorials/clusters/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>AppArmor</title>
      <link>https://lijun.in/tutorials/clusters/apparmor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lijun.in/tutorials/clusters/apparmor/</guid>
      <description>. feature-state for_k8s_version=&amp;quot;v1.4&amp;rdquo; state=&amp;quot;beta&amp;rdquo; &amp;gt;}}
Apparmor 是一个 Linux 内核安全模块，它补充了标准的基于 Linux 用户和组的安全模块将程序限制为有限资源集的权限。AppArmor 可以配置为任何应用程序减少潜在的攻击面，并且提供更加深入的防御。AppArmor 是通过配置文件进行配置的，这些配置文件被调整为报名单，列出了特定程序或者容器所需要的访问权限，如 Linux 功能、网络访问、文件权限等。每个配置文件都可以在强制模式(阻止访问不允许的资源)或投诉模式(仅报告冲突)下运行。
. heading &amp;ldquo;objectives&amp;rdquo; %}}  查看如何在节点上加载配置文件示例 了解如何在 Pod 上强制执行配置文件 了解如何检查配置文件是否已加载 查看违反配置文件时会发生什么情况 查看无法加载配置文件时会发生什么情况  . heading &amp;ldquo;prerequisites&amp;rdquo; %}} 务必：
 Kubernetes 版本至少是 v1.4 &amp;ndash; AppArmor 在 Kubernetes v1.4 版本中才添加了对 AppArmor 的支持。早于 v1.4 版本的 Kubernetes 组件不知道新的 AppArmor 注释，并且将会 默认忽略 提供的任何 AppArmor 设置。为了确保您的 Pods 能够得到预期的保护，必须验证节点的 Kubelet 版本：  kubectl get nodes -o=jsonpath=$&amp;#39;{range .items[*]}{@.metadata.name}: {@.status.nodeInfo.kubeletVersion}\n{end}&amp;#39; gke-test-default-pool-239f5d02-gyn2: v1.4.0 gke-test-default-pool-239f5d02-x1kf: v1.4.0 gke-test-default-pool-239f5d02-xwux: v1.</description>
    </item>
    
  </channel>
</rss>