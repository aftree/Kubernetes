<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Turnkey 云解决方案 on Hugo 主题的 Learn 文档</title>
    <link>https://lijun.in/setup/production-environment/turnkey/</link>
    <description>Recent content in Turnkey 云解决方案 on Hugo 主题的 Learn 文档</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    
	<atom:link href="https://lijun.in/setup/production-environment/turnkey/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>使用 IBM Cloud Private 在多个云上运行 Kubernetes</title>
      <link>https://lijun.in/setup/production-environment/turnkey/icp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lijun.in/setup/production-environment/turnkey/icp/</guid>
      <description>IBM® Cloud Private 是一个 一站式云解决方案并且是一个本地的一站式云解决方案。 IBM Cloud Private 提供纯上游 Kubernetes，以及运行实际企业工作负载所需的典型管理组件。这些工作负载包括健康管理、日志管理、审计跟踪以及用于跟踪平台上工作负载使用情况的计量。
IBM Cloud Private 提供了社区版和全支持的企业版。可从 Docker Hub 免费获得社区版本。企业版支持高可用性拓扑，并包括 IBM 对 Kubernetes 和 IBM Cloud Private 管理平台的商业支持。如果您想尝试 IBM Cloud Private，您可以使用托管试用版、教程或自我指导演示。您也可以尝试免费的社区版。有关详细信息，请参阅 IBM Cloud Private 入门。
有关更多信息，请浏览以下资源：
 IBM Cloud Private IBM Cloud Private 参考架构 IBM Cloud Private 文档  IBM Cloud Private 和 Terraform 您可以利用一下模块使用 Terraform 部署 IBM Cloud Private：
 AWS：将 IBM Cloud Private 部署到 AWS Azure：将 IBM Cloud Private 部署到 Azure IBM Cloud：将 IBM Cloud Private 集群部署到 IBM Cloud OpenStack：将IBM Cloud Private 部署到 OpenStack Terraform 模块：在任何支持的基础架构供应商上部署 IBM Cloud Private VMware：将 IBM Cloud Private 部署到 VMware  AWS 上的 IBM Cloud Private 您可以使用 AWS CloudFormation 或 Terraform 在 Amazon Web Services（AWS）上部署 IBM Cloud Private 集群。</description>
    </item>
    
    <item>
      <title>在 AWS EC2 上运行 Kubernetes</title>
      <link>https://lijun.in/setup/production-environment/turnkey/aws/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lijun.in/setup/production-environment/turnkey/aws/</guid>
      <description>本页面介绍了如何在 AWS 上安装 Kubernetes 集群。
. heading &amp;ldquo;prerequisites&amp;rdquo; %}} 在 AWS 上创建 Kubernetes 集群，您将需要 AWS 的 Access Key ID 和 Secret Access Key。
支持的生产级别工具  conjure-up 是 Kubernetes 的开源安装程序，可在 Ubuntu 上创建与原生 AWS 集成的 Kubernetes 集群。   Kubernetes Operations - 生产级 K8s 的安装、升级和管理。支持在 AWS 运行 Debian、Ubuntu、CentOS 和 RHEL。   CoreOS Tectonic 包括开源的 Tectonic 安装程序，它用于在 AWS 上创建带有 Container Linux 节点的 Kubernetes 集群。   起源于 CoreOS，Kubernetes Incubator 维护的 CLI 工具， kube-aws ，该工具使用 Container Linux 节点创建和管理 Kubernetes 集群，它使用了 AWS 工具：EC2、CloudFormation 和 Autoscaling。   KubeOne 是一个开源集群生命周期管理工具，它可用于创建，升级和管理高可用 Kubernetes 集群。  集群入门 命令行管理工具：kubectl 集群启动脚本将在您的工作站上为您提供一个 kubernetes 目录。 或者，您可以从此页面下载最新的 Kubernetes 版本。</description>
    </item>
    
    <item>
      <title>在 Azure 上运行 Kubernetes</title>
      <link>https://lijun.in/setup/production-environment/turnkey/azure/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lijun.in/setup/production-environment/turnkey/azure/</guid>
      <description>Azure Kubernetes 服务 (AKS) Azure Kubernetes 服务提供了简单的 Kubernetes 集群部署方式。
有关通过 Azure Kubernetes 服务将 Kubernetes 集群部署到 Azure 的示例：
微软 Azure Kubernetes 服务
定制部署：AKS 引擎 Azure Kubernetes 服务的核心是开源，并且可以在 GitHub 上让社区使用和参与贡献：AKS 引擎。旧版 ACS 引擎 代码库已被弃用，以支持AKS-engine。
如果您需要在 Azure Kubernetes 服务正式支持的范围之外对部署进行自定义，则 AKS 引擎是一个不错的选择。这些自定义包括部署到现有虚拟网络中，利用多个代理程序池等。一些社区对 AKS 引擎的贡献甚至可能成为 Azure Kubernetes 服务的特性。
AKS 引擎的输入是一个描述 Kubernetes 集群的 apimodel JSON 文件。它和用于直接通过 Azure Kubernetes 服务部署集群的 Azure 资源管理器（ARM）模板语法相似。产生的输出是一个 ARM 模板，可以将其签入源代码管理，并使用它将 Kubernetes 集群部署到 Azure。
您可以按照 **AKS 引擎 Kubernetes 教程**开始使用。
适用于 Azure 的 CoreOS Tectonic 适用于 Azure 的 CoreOS Tectonic Installer 是开源的，它可以让社区在 GitHub 上使用和参与贡献：Tectonic Installer。</description>
    </item>
    
    <item>
      <title>在腾讯云容器服务上运行 Kubernetes</title>
      <link>https://lijun.in/setup/production-environment/turnkey/tencent/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lijun.in/setup/production-environment/turnkey/tencent/</guid>
      <description>腾讯云容器服务 腾讯云容器服务（TKE）提供本地 Kubernetes 容器管理服务。您只需几个步骤即可使用 TKE 部署和管理 Kubernetes 集群。有关详细说明，请参阅部署腾讯云容器服务。
TKE 是认证的 Kubernetes 产品。它与原生 Kubernetes API 完全兼容。
定制部署 腾讯 Kubernetes Engine 的核心是开源的，并且可以在 GitHub 上使用。
使用 TKE 创建 Kubernetes 集群时，可以选择托管模式或独立部署模式。另外，您可以根据需要自定义部署。例如，您可以选择现有的 Cloud Virtual Machine 实例来创建集群，也可以在 IPVS 模式下启用 Kube-proxy。
下一步 要了解更多信息，请参阅 TKE 文档。</description>
    </item>
    
    <item>
      <title>在阿里云上运行 Kubernetes</title>
      <link>https://lijun.in/setup/production-environment/turnkey/alibaba-cloud/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lijun.in/setup/production-environment/turnkey/alibaba-cloud/</guid>
      <description>阿里云容器服务 阿里云容器服务使您可以在阿里云 ECS 实例集群上运行和管理 Docker 应用程序。它支持流行的开源容器编排引擎：Docker Swarm 和 Kubernetes。
为了简化集群的部署和管理，请使用 容器服务 Kubernetes 版。您可以按照 Kubernetes 演练快速入门，其中有一些使用中文书写的容器服务 Kubernetes 版教程。
要使用自定义二进制文件或开源版本的 Kubernetes，请按照以下说明进行操作。
自定义部署 阿里云 Kubernetes Cloud Provider 实现 的源代码是开源的，可在 GitHub 上获得。
有关更多信息，请参阅中文版本快速部署 Kubernetes - 阿里云上的VPC环境和英文版本。</description>
    </item>
    
  </channel>
</rss>