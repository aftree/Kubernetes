<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>本地 VMs on Hugo 主题的 Learn 文档</title>
    <link>https://lijun.in/setup/production-environment/on-premises-vm/</link>
    <description>Recent content in 本地 VMs on Hugo 主题的 Learn 文档</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    
	<atom:link href="https://lijun.in/setup/production-environment/on-premises-vm/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>DC/OS 上的 Kubernetes</title>
      <link>https://lijun.in/setup/production-environment/on-premises-vm/dcos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lijun.in/setup/production-environment/on-premises-vm/dcos/</guid>
      <description>Mesosphere 提供了一个简单的选项来将 Kubernetes 设置到DC/OS上，它提供：
 纯上游 Kubernetes 集群一键部署 默认情况下高度可用且安全 与快速数据平台 (例如 Akka、Cassandra、Kafka、Spark) 一起运行的 Kubernetes  Mesosphere 官方指南 DC/OS 入门的正式来源位于quickstart 仓库中。</description>
    </item>
    
    <item>
      <title>oVirt</title>
      <link>https://lijun.in/setup/production-environment/on-premises-vm/ovirt/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lijun.in/setup/production-environment/on-premises-vm/ovirt/</guid>
      <description>oVirt 是一个虚拟数据中心管理器，可以对多个主机上的多个虚拟机进行强大的管理。 使用 KVM 和 libvirt ，可以将 oVirt 安装在 Fedora、CentOS 或者 Red Hat Enterprise Linux 主机上，以部署和管理您的虚拟数据中心。
oVirt 云驱动的部署 oVirt 云驱动可以轻松发现新 VM 实例并自动将其添加为 Kubernetes 集群的节点。 目前，包括 Kubernetes 在内，尚无社区支持或预加载的 VM 镜像，但可以在 VM 中 导入 或 安装 Project Atomic（或 Fedora）来 生成模版。 包括 Kubernetes 的任何其他 Linux 发行版也可能可行。
必须在寄宿系统中 安装 ovirt-guest-agent，才能将 VM 的 IP 地址和主机名报给 ovirt-engine 并最终报告给 Kubernetes。
一旦 Kubernetes 模版可用，就可以开始创建可由云驱动发现的 VM。
使用 oVirt 云驱动 oVirt 云驱动需要访问 oVirt REST-API 来收集正确的信息，所需的凭据应在 ovirt-cloud.conf 文件中设定：
[connection] uri = https://localhost:8443/ovirt-engine/api username = admin@internal password = admin 在同一文件中，可以指定（使用 filters 节区）搜索查询，用于辨识要报告给 Kubernetes 的 VM：</description>
    </item>
    
  </channel>
</rss>