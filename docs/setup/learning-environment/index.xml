<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>💖 - 学习环境 on Hugo 主题的 Learn 文档</title>
    <link>https://lijun.in/setup/learning-environment/</link>
    <description>Recent content in 💖 - 学习环境 on Hugo 主题的 Learn 文档</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    
	<atom:link href="https://lijun.in/setup/learning-environment/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>使用 Minikube 安装 Kubernetes</title>
      <link>https://lijun.in/setup/learning-environment/minikube/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lijun.in/setup/learning-environment/minikube/</guid>
      <description>Minikube 是一种可以让您在本地轻松运行 Kubernetes 的工具。Minikube 在笔记本电脑上的虚拟机（VM）中运行单节点 Kubernetes 集群，供那些希望尝试 Kubernetes 或进行日常开发的用户使用。
Minikube 功能 Minikube 支持以下 Kubernetes 功能：
 DNS NodePorts ConfigMaps 和 Secrets Dashboards 容器运行时: Docker、CRI-O 以及 containerd 启用 CNI （容器网络接口） Ingress  安装 请参阅安装 Minikube。
快速开始 这个简短的演示将指导您如何在本地启动、使用和删除 Minikube。请按照以下步骤开始探索 Minikube。
  启动 Minikube 并创建一个集群：
minikube start 输出类似于：
Starting local Kubernetes cluster... Running pre-create checks... Creating machine... Starting local Kubernetes cluster... 有关使用特定 Kubernetes 版本、VM 或容器运行时启动集群的详细信息，请参阅启动集群。
  现在，您可以使用 kubectl 与集群进行交互。有关详细信息，请参阅与集群交互。
让我们使用名为 echoserver 的镜像创建一个 Kubernetes Deployment，并使用 --port 在端口 8080 上暴露服务。echoserver 是一个简单的 HTTP 服务器。</description>
    </item>
    
  </channel>
</rss>