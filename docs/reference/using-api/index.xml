<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>😍 - 使用 Kubernetes API on Hugo 主题的 Learn 文档</title>
    <link>https://lijun.in/reference/using-api/</link>
    <description>Recent content in 😍 - 使用 Kubernetes API on Hugo 主题的 Learn 文档</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    
	<atom:link href="https://lijun.in/reference/using-api/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Kubernetes API 总览</title>
      <link>https://lijun.in/reference/using-api/api-overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lijun.in/reference/using-api/api-overview/</guid>
      <description>此页提供 Kubernetes API 的总览
REST API 是 Kubernetes 的基础架构。组件之间的所有操作和通信，以及外部用户命令都是 API Server 处理的 REST API 调用。因此，Kubernetes 平台中的所有资源被视为 API 对象，并且在 [API](/docs/reference/generated/kubernetes-api/. param &amp;ldquo;version&amp;rdquo; &amp;gt;}}/) 中都有对应的定义项。
大多数操作可以通过 kubectl 命令行界面或其他命令行工具执行，例如 kubeadm，它们本身也使用 API。但是，您也可以使用 REST 调用直接访问 API。
如果您正在使用 Kubernetes API 编写应用程序，请考虑使用 客户端库。
API 版本控制 为了消除字段或重组资源表示形式，Kubernetes 支持多个 API 版本，每个版本在不同的 API 路径下。例如：/api/v1 或者 /apis/extensions/v1beta1。
版本是在 API 级别而非资源或字段级别配置的：
 确保 API 呈现出清晰一致的系统资源和行为视图。 允许控制对已寿终正寝的 API 和/或实验性 API 的访问。  JSON 和 Protobuf 序列化模式在出现模式变更时均遵循这些准则。以下说明同时适用于这两种格式。
. note &amp;gt;}} API 版本和软件版本是间接相关的。API 和发布版本建议 描述了 API 版本和软件版本之间的关系。 .</description>
    </item>
    
    <item>
      <title>客户端库</title>
      <link>https://lijun.in/reference/using-api/client-libraries/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lijun.in/reference/using-api/client-libraries/</guid>
      <description>本页面包含基于各种编程语言使用 Kubernetes API 的客户端库概述。
在使用 Kubernetes REST API 编写应用程序时， 您并不需要自己实现 API 调用和 “请求/响应” 类型。 您可以根据自己的编程语言需要选择使用合适的客户端库。
客户端库通常为您处理诸如身份验证之类的常见任务。 如果 API 客户端在 Kubernetes 集群中运行，大多数客户端库可以发现并使用 Kubernetes 服务帐户进行身份验证， 或者能够理解 kubeconfig 文件 格式来读取凭据和 API 服务器地址。
官方支持的 Kubernetes 客户端库 以下客户端库由 Kubernetes SIG API Machinery 正式维护。
   语言 客户端库 样例程序     Go github.com/kubernetes/client-go/ 浏览   Python github.com/kubernetes-client/python/ 浏览   Java github.com/kubernetes-client/java 浏览   dotnet github.com/kubernetes-client/csharp 浏览   JavaScript github.com/kubernetes-client/javascript 浏览   Haskell github.</description>
    </item>
    
  </channel>
</rss>